iot setup 2


export PROJECT_ID="dfpl-project-001"
export PUBSUB_TOPIC="iotcore-topic"
export PUBSUB_SUBSCRIPTION="iotcore-subscription"
export REGISTRY_NAME="dfpl-temp"
export REGION_NAME="asia-east1"
export GATEWAY_NAME="test-gateway"

gcloud pubsub subscriptions create $PUBSUB_SUBSCRIPTION --topic=$PUBSUB_TOPIC



gcloud iot devices create $GATEWAY_NAME \
  --region=$REGION_NAME \
  --registry=$REGISTRY_NAME \
  --auth-method=association-only \
  --device-type=gateway \
  --project=$PROJECT_ID \
  --public-key path=rsa_cert.pem,type=rsa-x509-pem



export MDEVICE_NAME="espmesh-00"  
espmesh-00
espmesh-01
espmesh-02

gcloud iot devices create espmesh-09 \
  --region=$REGION_NAME \
  --registry=$REGISTRY_NAME \
  --device-type=non-gateway \
  --project=$PROJECT_ID
  
gcloud iot devices gateways bind \
  --device=espmesh-00 \
  --device-region=$REGION_NAME \
  --device-registry=$REGISTRY_NAME \
  --gateway=$GATEWAY_NAME \
  --gateway-region=$REGION_NAME \
  --gateway-registry=$REGISTRY_NAME \
  --project=$PROJECT_ID
  
  
////

git clone https://github.com/googlecloudplatform/python-docs-samples gcp-python
cd gcp-python/iot/api-client/codelabs

sudo apt install python3-venv
python3 -m venv env
source env/bin/activate

pip install -r requirements.txt
//Next, retrieve the root certificate from Google.
wget https://pki.goog/roots.pem

python ./gateway.py \
--registry_id=$REGISTRY_NAME \
--gateway_id=$GATEWAY_NAME \
--cloud_region=$REGION_NAME \
--private_key_file=$HOME/rsa_private.pem \
--algorithm=RS256 \
--ca_certs=roots.pem \
--mqtt_bridge_hostname=mqtt.googleapis.com \
--mqtt_bridge_port=8883 \
--jwt_expires_minutes=1200 \
--project=$PROJECT_ID

python ./gateway.py --registry_id="dfpl-temp" --gateway_id="test-gateway" --cloud_region="asia-east1" --private_key_file=rsa_private.pem --algorithm=RS256 --ca_certs=roots.pem --mqtt_bridge_hostname=mqtt.googleapis.com --mqtt_bridge_port=8883 --jwt_expires_minutes=1200 --project="dfpl-project-001"


//Passive Controlled Device (Receiver)
python ./ledlight.py espmesh-00

//Passive Transmitter
python ./thermostat.py espmesh-01

gcloud pubsub subscriptions pull --auto-ack $PUBSUB_SUBSCRIPTION --limit=20 --project=$PROJECT_ID


//Active Controllable TransReciver
python ./lightsensor.py espmesh-02


/////
https://cloud.google.com/community/tutorials/ardu-pi-serial-part-2

https://cloud.google.com/dataflow/docs/quickstarts/quickstart-python
Enable the Cloud Dataflow, Compute Engine, Stackdriver Logging, Google Cloud Storage, Google Cloud Storage JSON, BigQuery, Cloud Pub/Sub, Cloud Datastore, and Cloud Resource Manager APIs.





















  

